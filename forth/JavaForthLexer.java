// Generated from JavaForth.g4 by ANTLR 4.6
import org.antlr.v4.runtime.Lexer;
import org.antlr.v4.runtime.CharStream;
import org.antlr.v4.runtime.Token;
import org.antlr.v4.runtime.TokenStream;
import org.antlr.v4.runtime.*;
import org.antlr.v4.runtime.atn.*;
import org.antlr.v4.runtime.dfa.DFA;
import org.antlr.v4.runtime.misc.*;

@SuppressWarnings({"all", "warnings", "unchecked", "unused", "cast"})
public class JavaForthLexer extends Lexer {
	static { RuntimeMetaData.checkVersion("4.6", RuntimeMetaData.VERSION); }

	protected static final DFA[] _decisionToDFA;
	protected static final PredictionContextCache _sharedContextCache =
		new PredictionContextCache();
	public static final int
		T__0=1, T__1=2, T__2=3, BOOLEAN=4, INT=5, IntegerLiteral=6, FloatingPointLiteral=7, 
		BooleanLiteral=8, LPAREN=9, RPAREN=10, LBRACE=11, RBRACE=12, LBRACK=13, 
		RBRACK=14, SEMI=15, COMMA=16, DOT=17, ASSIGN=18, GT=19, LT=20, BANG=21, 
		TILDE=22, QUESTION=23, COLON=24, EQUAL=25, LE=26, GE=27, NOTEQUAL=28, 
		AND=29, OR=30, INC=31, DEC=32, ADD=33, SUB=34, MUL=35, DIV=36, BITAND=37, 
		BITOR=38, CARET=39, MOD=40, ADD_ASSIGN=41, SUB_ASSIGN=42, MUL_ASSIGN=43, 
		DIV_ASSIGN=44, AND_ASSIGN=45, OR_ASSIGN=46, XOR_ASSIGN=47, MOD_ASSIGN=48, 
		LSHIFT_ASSIGN=49, RSHIFT_ASSIGN=50, URSHIFT_ASSIGN=51, Identifier=52, 
		AT=53, ELLIPSIS=54, PRINT=55, WS=56, COMMENT=57, LINE_COMMENT=58;
	public static String[] modeNames = {
		"DEFAULT_MODE"
	};

	public static final String[] ruleNames = {
		"T__0", "T__1", "T__2", "BOOLEAN", "INT", "IntegerLiteral", "DecimalIntegerLiteral", 
		"HexIntegerLiteral", "OctalIntegerLiteral", "BinaryIntegerLiteral", "IntegerTypeSuffix", 
		"DecimalNumeral", "Digits", "Digit", "NonZeroDigit", "DigitOrUnderscore", 
		"Underscores", "HexNumeral", "HexDigits", "HexDigit", "HexDigitOrUnderscore", 
		"OctalNumeral", "OctalDigits", "OctalDigit", "OctalDigitOrUnderscore", 
		"BinaryNumeral", "BinaryDigits", "BinaryDigit", "BinaryDigitOrUnderscore", 
		"FloatingPointLiteral", "DecimalFloatingPointLiteral", "ExponentPart", 
		"ExponentIndicator", "SignedInteger", "Sign", "FloatTypeSuffix", "HexadecimalFloatingPointLiteral", 
		"HexSignificand", "BinaryExponent", "BinaryExponentIndicator", "BooleanLiteral", 
		"LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", "SEMI", "COMMA", 
		"DOT", "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", "COLON", "EQUAL", 
		"LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", "SUB", "MUL", 
		"DIV", "BITAND", "BITOR", "CARET", "MOD", "ADD_ASSIGN", "SUB_ASSIGN", 
		"MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", "MOD_ASSIGN", 
		"LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "Identifier", "JavaLetter", 
		"JavaLetterOrDigit", "AT", "ELLIPSIS", "PRINT", "WS", "COMMENT", "LINE_COMMENT"
	};

	private static final String[] _LITERAL_NAMES = {
		null, "'null'", "'this'", "'super'", "'boolean'", "'int'", null, null, 
		null, "'('", "')'", "'{'", "'}'", "'['", "']'", "';'", "','", "'.'", "'='", 
		"'>'", "'<'", "'!'", "'~'", "'?'", "':'", "'=='", "'<='", "'>='", "'!='", 
		"'&&'", "'||'", "'++'", "'--'", "'+'", "'-'", "'*'", "'/'", "'&'", "'|'", 
		"'^'", "'%'", "'+='", "'-='", "'*='", "'/='", "'&='", "'|='", "'^='", 
		"'%='", "'<<='", "'>>='", "'>>>='", null, "'@'", "'...'", "'print'"
	};
	private static final String[] _SYMBOLIC_NAMES = {
		null, null, null, null, "BOOLEAN", "INT", "IntegerLiteral", "FloatingPointLiteral", 
		"BooleanLiteral", "LPAREN", "RPAREN", "LBRACE", "RBRACE", "LBRACK", "RBRACK", 
		"SEMI", "COMMA", "DOT", "ASSIGN", "GT", "LT", "BANG", "TILDE", "QUESTION", 
		"COLON", "EQUAL", "LE", "GE", "NOTEQUAL", "AND", "OR", "INC", "DEC", "ADD", 
		"SUB", "MUL", "DIV", "BITAND", "BITOR", "CARET", "MOD", "ADD_ASSIGN", 
		"SUB_ASSIGN", "MUL_ASSIGN", "DIV_ASSIGN", "AND_ASSIGN", "OR_ASSIGN", "XOR_ASSIGN", 
		"MOD_ASSIGN", "LSHIFT_ASSIGN", "RSHIFT_ASSIGN", "URSHIFT_ASSIGN", "Identifier", 
		"AT", "ELLIPSIS", "PRINT", "WS", "COMMENT", "LINE_COMMENT"
	};
	public static final Vocabulary VOCABULARY = new VocabularyImpl(_LITERAL_NAMES, _SYMBOLIC_NAMES);

	/**
	 * @deprecated Use {@link #VOCABULARY} instead.
	 */
	@Deprecated
	public static final String[] tokenNames;
	static {
		tokenNames = new String[_SYMBOLIC_NAMES.length];
		for (int i = 0; i < tokenNames.length; i++) {
			tokenNames[i] = VOCABULARY.getLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = VOCABULARY.getSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}
	}

	@Override
	@Deprecated
	public String[] getTokenNames() {
		return tokenNames;
	}

	@Override

	public Vocabulary getVocabulary() {
		return VOCABULARY;
	}


	public JavaForthLexer(CharStream input) {
		super(input);
		_interp = new LexerATNSimulator(this,_ATN,_decisionToDFA,_sharedContextCache);
	}

	@Override
	public String getGrammarFileName() { return "JavaForth.g4"; }

	@Override
	public String[] getRuleNames() { return ruleNames; }

	@Override
	public String getSerializedATN() { return _serializedATN; }

	@Override
	public String[] getModeNames() { return modeNames; }

	@Override
	public ATN getATN() { return _ATN; }

	public static final String _serializedATN =
		"\3\u0430\ud6d1\u8206\uad2d\u4417\uaef1\u8d80\uaadd\2<\u0251\b\1\4\2\t"+
		"\2\4\3\t\3\4\4\t\4\4\5\t\5\4\6\t\6\4\7\t\7\4\b\t\b\4\t\t\t\4\n\t\n\4\13"+
		"\t\13\4\f\t\f\4\r\t\r\4\16\t\16\4\17\t\17\4\20\t\20\4\21\t\21\4\22\t\22"+
		"\4\23\t\23\4\24\t\24\4\25\t\25\4\26\t\26\4\27\t\27\4\30\t\30\4\31\t\31"+
		"\4\32\t\32\4\33\t\33\4\34\t\34\4\35\t\35\4\36\t\36\4\37\t\37\4 \t \4!"+
		"\t!\4\"\t\"\4#\t#\4$\t$\4%\t%\4&\t&\4\'\t\'\4(\t(\4)\t)\4*\t*\4+\t+\4"+
		",\t,\4-\t-\4.\t.\4/\t/\4\60\t\60\4\61\t\61\4\62\t\62\4\63\t\63\4\64\t"+
		"\64\4\65\t\65\4\66\t\66\4\67\t\67\48\t8\49\t9\4:\t:\4;\t;\4<\t<\4=\t="+
		"\4>\t>\4?\t?\4@\t@\4A\tA\4B\tB\4C\tC\4D\tD\4E\tE\4F\tF\4G\tG\4H\tH\4I"+
		"\tI\4J\tJ\4K\tK\4L\tL\4M\tM\4N\tN\4O\tO\4P\tP\4Q\tQ\4R\tR\4S\tS\4T\tT"+
		"\4U\tU\4V\tV\4W\tW\4X\tX\4Y\tY\4Z\tZ\4[\t[\4\\\t\\\4]\t]\4^\t^\3\2\3\2"+
		"\3\2\3\2\3\2\3\3\3\3\3\3\3\3\3\3\3\4\3\4\3\4\3\4\3\4\3\4\3\5\3\5\3\5\3"+
		"\5\3\5\3\5\3\5\3\5\3\6\3\6\3\6\3\6\3\7\3\7\3\7\3\7\5\7\u00de\n\7\3\b\3"+
		"\b\5\b\u00e2\n\b\3\t\3\t\5\t\u00e6\n\t\3\n\3\n\5\n\u00ea\n\n\3\13\3\13"+
		"\5\13\u00ee\n\13\3\f\3\f\3\r\3\r\3\r\5\r\u00f5\n\r\3\r\3\r\3\r\5\r\u00fa"+
		"\n\r\5\r\u00fc\n\r\3\16\3\16\7\16\u0100\n\16\f\16\16\16\u0103\13\16\3"+
		"\16\5\16\u0106\n\16\3\17\3\17\5\17\u010a\n\17\3\20\3\20\3\21\3\21\5\21"+
		"\u0110\n\21\3\22\6\22\u0113\n\22\r\22\16\22\u0114\3\23\3\23\3\23\3\23"+
		"\3\24\3\24\7\24\u011d\n\24\f\24\16\24\u0120\13\24\3\24\5\24\u0123\n\24"+
		"\3\25\3\25\3\26\3\26\5\26\u0129\n\26\3\27\3\27\5\27\u012d\n\27\3\27\3"+
		"\27\3\30\3\30\7\30\u0133\n\30\f\30\16\30\u0136\13\30\3\30\5\30\u0139\n"+
		"\30\3\31\3\31\3\32\3\32\5\32\u013f\n\32\3\33\3\33\3\33\3\33\3\34\3\34"+
		"\7\34\u0147\n\34\f\34\16\34\u014a\13\34\3\34\5\34\u014d\n\34\3\35\3\35"+
		"\3\36\3\36\5\36\u0153\n\36\3\37\3\37\5\37\u0157\n\37\3 \3 \3 \5 \u015c"+
		"\n \3 \5 \u015f\n \3 \5 \u0162\n \3 \3 \3 \5 \u0167\n \3 \5 \u016a\n "+
		"\3 \3 \3 \5 \u016f\n \3 \3 \3 \5 \u0174\n \3!\3!\3!\3\"\3\"\3#\5#\u017c"+
		"\n#\3#\3#\3$\3$\3%\3%\3&\3&\3&\5&\u0187\n&\3\'\3\'\5\'\u018b\n\'\3\'\3"+
		"\'\3\'\5\'\u0190\n\'\3\'\3\'\5\'\u0194\n\'\3(\3(\3(\3)\3)\3*\3*\3*\3*"+
		"\3*\3*\3*\3*\3*\5*\u01a4\n*\3+\3+\3,\3,\3-\3-\3.\3.\3/\3/\3\60\3\60\3"+
		"\61\3\61\3\62\3\62\3\63\3\63\3\64\3\64\3\65\3\65\3\66\3\66\3\67\3\67\3"+
		"8\38\39\39\3:\3:\3;\3;\3;\3<\3<\3<\3=\3=\3=\3>\3>\3>\3?\3?\3?\3@\3@\3"+
		"@\3A\3A\3A\3B\3B\3B\3C\3C\3D\3D\3E\3E\3F\3F\3G\3G\3H\3H\3I\3I\3J\3J\3"+
		"K\3K\3K\3L\3L\3L\3M\3M\3M\3N\3N\3N\3O\3O\3O\3P\3P\3P\3Q\3Q\3Q\3R\3R\3"+
		"R\3S\3S\3S\3S\3T\3T\3T\3T\3U\3U\3U\3U\3U\3V\3V\7V\u0215\nV\fV\16V\u0218"+
		"\13V\3W\3W\3W\3W\5W\u021e\nW\3X\3X\3X\3X\5X\u0224\nX\3Y\3Y\3Z\3Z\3Z\3"+
		"Z\3[\3[\3[\3[\3[\3[\3\\\6\\\u0233\n\\\r\\\16\\\u0234\3\\\3\\\3]\3]\3]"+
		"\3]\7]\u023d\n]\f]\16]\u0240\13]\3]\3]\3]\3]\3]\3^\3^\3^\3^\7^\u024b\n"+
		"^\f^\16^\u024e\13^\3^\3^\3\u023e\2_\3\3\5\4\7\5\t\6\13\7\r\b\17\2\21\2"+
		"\23\2\25\2\27\2\31\2\33\2\35\2\37\2!\2#\2%\2\'\2)\2+\2-\2/\2\61\2\63\2"+
		"\65\2\67\29\2;\2=\t?\2A\2C\2E\2G\2I\2K\2M\2O\2Q\2S\nU\13W\fY\r[\16]\17"+
		"_\20a\21c\22e\23g\24i\25k\26m\27o\30q\31s\32u\33w\34y\35{\36}\37\177 "+
		"\u0081!\u0083\"\u0085#\u0087$\u0089%\u008b&\u008d\'\u008f(\u0091)\u0093"+
		"*\u0095+\u0097,\u0099-\u009b.\u009d/\u009f\60\u00a1\61\u00a3\62\u00a5"+
		"\63\u00a7\64\u00a9\65\u00ab\66\u00ad\2\u00af\2\u00b1\67\u00b38\u00b59"+
		"\u00b7:\u00b9;\u00bb<\3\2\24\4\2NNnn\3\2\63;\4\2ZZzz\5\2\62;CHch\3\2\62"+
		"9\4\2DDdd\3\2\62\63\4\2GGgg\4\2--//\6\2FFHHffhh\4\2RRrr\6\2&&C\\aac|\4"+
		"\2\2\u0081\ud802\udc01\3\2\ud802\udc01\3\2\udc02\ue001\7\2&&\62;C\\aa"+
		"c|\5\2\13\f\16\17\"\"\4\2\f\f\17\17\u025e\2\3\3\2\2\2\2\5\3\2\2\2\2\7"+
		"\3\2\2\2\2\t\3\2\2\2\2\13\3\2\2\2\2\r\3\2\2\2\2=\3\2\2\2\2S\3\2\2\2\2"+
		"U\3\2\2\2\2W\3\2\2\2\2Y\3\2\2\2\2[\3\2\2\2\2]\3\2\2\2\2_\3\2\2\2\2a\3"+
		"\2\2\2\2c\3\2\2\2\2e\3\2\2\2\2g\3\2\2\2\2i\3\2\2\2\2k\3\2\2\2\2m\3\2\2"+
		"\2\2o\3\2\2\2\2q\3\2\2\2\2s\3\2\2\2\2u\3\2\2\2\2w\3\2\2\2\2y\3\2\2\2\2"+
		"{\3\2\2\2\2}\3\2\2\2\2\177\3\2\2\2\2\u0081\3\2\2\2\2\u0083\3\2\2\2\2\u0085"+
		"\3\2\2\2\2\u0087\3\2\2\2\2\u0089\3\2\2\2\2\u008b\3\2\2\2\2\u008d\3\2\2"+
		"\2\2\u008f\3\2\2\2\2\u0091\3\2\2\2\2\u0093\3\2\2\2\2\u0095\3\2\2\2\2\u0097"+
		"\3\2\2\2\2\u0099\3\2\2\2\2\u009b\3\2\2\2\2\u009d\3\2\2\2\2\u009f\3\2\2"+
		"\2\2\u00a1\3\2\2\2\2\u00a3\3\2\2\2\2\u00a5\3\2\2\2\2\u00a7\3\2\2\2\2\u00a9"+
		"\3\2\2\2\2\u00ab\3\2\2\2\2\u00b1\3\2\2\2\2\u00b3\3\2\2\2\2\u00b5\3\2\2"+
		"\2\2\u00b7\3\2\2\2\2\u00b9\3\2\2\2\2\u00bb\3\2\2\2\3\u00bd\3\2\2\2\5\u00c2"+
		"\3\2\2\2\7\u00c7\3\2\2\2\t\u00cd\3\2\2\2\13\u00d5\3\2\2\2\r\u00dd\3\2"+
		"\2\2\17\u00df\3\2\2\2\21\u00e3\3\2\2\2\23\u00e7\3\2\2\2\25\u00eb\3\2\2"+
		"\2\27\u00ef\3\2\2\2\31\u00fb\3\2\2\2\33\u00fd\3\2\2\2\35\u0109\3\2\2\2"+
		"\37\u010b\3\2\2\2!\u010f\3\2\2\2#\u0112\3\2\2\2%\u0116\3\2\2\2\'\u011a"+
		"\3\2\2\2)\u0124\3\2\2\2+\u0128\3\2\2\2-\u012a\3\2\2\2/\u0130\3\2\2\2\61"+
		"\u013a\3\2\2\2\63\u013e\3\2\2\2\65\u0140\3\2\2\2\67\u0144\3\2\2\29\u014e"+
		"\3\2\2\2;\u0152\3\2\2\2=\u0156\3\2\2\2?\u0173\3\2\2\2A\u0175\3\2\2\2C"+
		"\u0178\3\2\2\2E\u017b\3\2\2\2G\u017f\3\2\2\2I\u0181\3\2\2\2K\u0183\3\2"+
		"\2\2M\u0193\3\2\2\2O\u0195\3\2\2\2Q\u0198\3\2\2\2S\u01a3\3\2\2\2U\u01a5"+
		"\3\2\2\2W\u01a7\3\2\2\2Y\u01a9\3\2\2\2[\u01ab\3\2\2\2]\u01ad\3\2\2\2_"+
		"\u01af\3\2\2\2a\u01b1\3\2\2\2c\u01b3\3\2\2\2e\u01b5\3\2\2\2g\u01b7\3\2"+
		"\2\2i\u01b9\3\2\2\2k\u01bb\3\2\2\2m\u01bd\3\2\2\2o\u01bf\3\2\2\2q\u01c1"+
		"\3\2\2\2s\u01c3\3\2\2\2u\u01c5\3\2\2\2w\u01c8\3\2\2\2y\u01cb\3\2\2\2{"+
		"\u01ce\3\2\2\2}\u01d1\3\2\2\2\177\u01d4\3\2\2\2\u0081\u01d7\3\2\2\2\u0083"+
		"\u01da\3\2\2\2\u0085\u01dd\3\2\2\2\u0087\u01df\3\2\2\2\u0089\u01e1\3\2"+
		"\2\2\u008b\u01e3\3\2\2\2\u008d\u01e5\3\2\2\2\u008f\u01e7\3\2\2\2\u0091"+
		"\u01e9\3\2\2\2\u0093\u01eb\3\2\2\2\u0095\u01ed\3\2\2\2\u0097\u01f0\3\2"+
		"\2\2\u0099\u01f3\3\2\2\2\u009b\u01f6\3\2\2\2\u009d\u01f9\3\2\2\2\u009f"+
		"\u01fc\3\2\2\2\u00a1\u01ff\3\2\2\2\u00a3\u0202\3\2\2\2\u00a5\u0205\3\2"+
		"\2\2\u00a7\u0209\3\2\2\2\u00a9\u020d\3\2\2\2\u00ab\u0212\3\2\2\2\u00ad"+
		"\u021d\3\2\2\2\u00af\u0223\3\2\2\2\u00b1\u0225\3\2\2\2\u00b3\u0227\3\2"+
		"\2\2\u00b5\u022b\3\2\2\2\u00b7\u0232\3\2\2\2\u00b9\u0238\3\2\2\2\u00bb"+
		"\u0246\3\2\2\2\u00bd\u00be\7p\2\2\u00be\u00bf\7w\2\2\u00bf\u00c0\7n\2"+
		"\2\u00c0\u00c1\7n\2\2\u00c1\4\3\2\2\2\u00c2\u00c3\7v\2\2\u00c3\u00c4\7"+
		"j\2\2\u00c4\u00c5\7k\2\2\u00c5\u00c6\7u\2\2\u00c6\6\3\2\2\2\u00c7\u00c8"+
		"\7u\2\2\u00c8\u00c9\7w\2\2\u00c9\u00ca\7r\2\2\u00ca\u00cb\7g\2\2\u00cb"+
		"\u00cc\7t\2\2\u00cc\b\3\2\2\2\u00cd\u00ce\7d\2\2\u00ce\u00cf\7q\2\2\u00cf"+
		"\u00d0\7q\2\2\u00d0\u00d1\7n\2\2\u00d1\u00d2\7g\2\2\u00d2\u00d3\7c\2\2"+
		"\u00d3\u00d4\7p\2\2\u00d4\n\3\2\2\2\u00d5\u00d6\7k\2\2\u00d6\u00d7\7p"+
		"\2\2\u00d7\u00d8\7v\2\2\u00d8\f\3\2\2\2\u00d9\u00de\5\17\b\2\u00da\u00de"+
		"\5\21\t\2\u00db\u00de\5\23\n\2\u00dc\u00de\5\25\13\2\u00dd\u00d9\3\2\2"+
		"\2\u00dd\u00da\3\2\2\2\u00dd\u00db\3\2\2\2\u00dd\u00dc\3\2\2\2\u00de\16"+
		"\3\2\2\2\u00df\u00e1\5\31\r\2\u00e0\u00e2\5\27\f\2\u00e1\u00e0\3\2\2\2"+
		"\u00e1\u00e2\3\2\2\2\u00e2\20\3\2\2\2\u00e3\u00e5\5%\23\2\u00e4\u00e6"+
		"\5\27\f\2\u00e5\u00e4\3\2\2\2\u00e5\u00e6\3\2\2\2\u00e6\22\3\2\2\2\u00e7"+
		"\u00e9\5-\27\2\u00e8\u00ea\5\27\f\2\u00e9\u00e8\3\2\2\2\u00e9\u00ea\3"+
		"\2\2\2\u00ea\24\3\2\2\2\u00eb\u00ed\5\65\33\2\u00ec\u00ee\5\27\f\2\u00ed"+
		"\u00ec\3\2\2\2\u00ed\u00ee\3\2\2\2\u00ee\26\3\2\2\2\u00ef\u00f0\t\2\2"+
		"\2\u00f0\30\3\2\2\2\u00f1\u00fc\7\62\2\2\u00f2\u00f9\5\37\20\2\u00f3\u00f5"+
		"\5\33\16\2\u00f4\u00f3\3\2\2\2\u00f4\u00f5\3\2\2\2\u00f5\u00fa\3\2\2\2"+
		"\u00f6\u00f7\5#\22\2\u00f7\u00f8\5\33\16\2\u00f8\u00fa\3\2\2\2\u00f9\u00f4"+
		"\3\2\2\2\u00f9\u00f6\3\2\2\2\u00fa\u00fc\3\2\2\2\u00fb\u00f1\3\2\2\2\u00fb"+
		"\u00f2\3\2\2\2\u00fc\32\3\2\2\2\u00fd\u0105\5\35\17\2\u00fe\u0100\5!\21"+
		"\2\u00ff\u00fe\3\2\2\2\u0100\u0103\3\2\2\2\u0101\u00ff\3\2\2\2\u0101\u0102"+
		"\3\2\2\2\u0102\u0104\3\2\2\2\u0103\u0101\3\2\2\2\u0104\u0106\5\35\17\2"+
		"\u0105\u0101\3\2\2\2\u0105\u0106\3\2\2\2\u0106\34\3\2\2\2\u0107\u010a"+
		"\7\62\2\2\u0108\u010a\5\37\20\2\u0109\u0107\3\2\2\2\u0109\u0108\3\2\2"+
		"\2\u010a\36\3\2\2\2\u010b\u010c\t\3\2\2\u010c \3\2\2\2\u010d\u0110\5\35"+
		"\17\2\u010e\u0110\7a\2\2\u010f\u010d\3\2\2\2\u010f\u010e\3\2\2\2\u0110"+
		"\"\3\2\2\2\u0111\u0113\7a\2\2\u0112\u0111\3\2\2\2\u0113\u0114\3\2\2\2"+
		"\u0114\u0112\3\2\2\2\u0114\u0115\3\2\2\2\u0115$\3\2\2\2\u0116\u0117\7"+
		"\62\2\2\u0117\u0118\t\4\2\2\u0118\u0119\5\'\24\2\u0119&\3\2\2\2\u011a"+
		"\u0122\5)\25\2\u011b\u011d\5+\26\2\u011c\u011b\3\2\2\2\u011d\u0120\3\2"+
		"\2\2\u011e\u011c\3\2\2\2\u011e\u011f\3\2\2\2\u011f\u0121\3\2\2\2\u0120"+
		"\u011e\3\2\2\2\u0121\u0123\5)\25\2\u0122\u011e\3\2\2\2\u0122\u0123\3\2"+
		"\2\2\u0123(\3\2\2\2\u0124\u0125\t\5\2\2\u0125*\3\2\2\2\u0126\u0129\5)"+
		"\25\2\u0127\u0129\7a\2\2\u0128\u0126\3\2\2\2\u0128\u0127\3\2\2\2\u0129"+
		",\3\2\2\2\u012a\u012c\7\62\2\2\u012b\u012d\5#\22\2\u012c\u012b\3\2\2\2"+
		"\u012c\u012d\3\2\2\2\u012d\u012e\3\2\2\2\u012e\u012f\5/\30\2\u012f.\3"+
		"\2\2\2\u0130\u0138\5\61\31\2\u0131\u0133\5\63\32\2\u0132\u0131\3\2\2\2"+
		"\u0133\u0136\3\2\2\2\u0134\u0132\3\2\2\2\u0134\u0135\3\2\2\2\u0135\u0137"+
		"\3\2\2\2\u0136\u0134\3\2\2\2\u0137\u0139\5\61\31\2\u0138\u0134\3\2\2\2"+
		"\u0138\u0139\3\2\2\2\u0139\60\3\2\2\2\u013a\u013b\t\6\2\2\u013b\62\3\2"+
		"\2\2\u013c\u013f\5\61\31\2\u013d\u013f\7a\2\2\u013e\u013c\3\2\2\2\u013e"+
		"\u013d\3\2\2\2\u013f\64\3\2\2\2\u0140\u0141\7\62\2\2\u0141\u0142\t\7\2"+
		"\2\u0142\u0143\5\67\34\2\u0143\66\3\2\2\2\u0144\u014c\59\35\2\u0145\u0147"+
		"\5;\36\2\u0146\u0145\3\2\2\2\u0147\u014a\3\2\2\2\u0148\u0146\3\2\2\2\u0148"+
		"\u0149\3\2\2\2\u0149\u014b\3\2\2\2\u014a\u0148\3\2\2\2\u014b\u014d\59"+
		"\35\2\u014c\u0148\3\2\2\2\u014c\u014d\3\2\2\2\u014d8\3\2\2\2\u014e\u014f"+
		"\t\b\2\2\u014f:\3\2\2\2\u0150\u0153\59\35\2\u0151\u0153\7a\2\2\u0152\u0150"+
		"\3\2\2\2\u0152\u0151\3\2\2\2\u0153<\3\2\2\2\u0154\u0157\5? \2\u0155\u0157"+
		"\5K&\2\u0156\u0154\3\2\2\2\u0156\u0155\3\2\2\2\u0157>\3\2\2\2\u0158\u0159"+
		"\5\33\16\2\u0159\u015b\7\60\2\2\u015a\u015c\5\33\16\2\u015b\u015a\3\2"+
		"\2\2\u015b\u015c\3\2\2\2\u015c\u015e\3\2\2\2\u015d\u015f\5A!\2\u015e\u015d"+
		"\3\2\2\2\u015e\u015f\3\2\2\2\u015f\u0161\3\2\2\2\u0160\u0162\5I%\2\u0161"+
		"\u0160\3\2\2\2\u0161\u0162\3\2\2\2\u0162\u0174\3\2\2\2\u0163\u0164\7\60"+
		"\2\2\u0164\u0166\5\33\16\2\u0165\u0167\5A!\2\u0166\u0165\3\2\2\2\u0166"+
		"\u0167\3\2\2\2\u0167\u0169\3\2\2\2\u0168\u016a\5I%\2\u0169\u0168\3\2\2"+
		"\2\u0169\u016a\3\2\2\2\u016a\u0174\3\2\2\2\u016b\u016c\5\33\16\2\u016c"+
		"\u016e\5A!\2\u016d\u016f\5I%\2\u016e\u016d\3\2\2\2\u016e\u016f\3\2\2\2"+
		"\u016f\u0174\3\2\2\2\u0170\u0171\5\33\16\2\u0171\u0172\5I%\2\u0172\u0174"+
		"\3\2\2\2\u0173\u0158\3\2\2\2\u0173\u0163\3\2\2\2\u0173\u016b\3\2\2\2\u0173"+
		"\u0170\3\2\2\2\u0174@\3\2\2\2\u0175\u0176\5C\"\2\u0176\u0177\5E#\2\u0177"+
		"B\3\2\2\2\u0178\u0179\t\t\2\2\u0179D\3\2\2\2\u017a\u017c\5G$\2\u017b\u017a"+
		"\3\2\2\2\u017b\u017c\3\2\2\2\u017c\u017d\3\2\2\2\u017d\u017e\5\33\16\2"+
		"\u017eF\3\2\2\2\u017f\u0180\t\n\2\2\u0180H\3\2\2\2\u0181\u0182\t\13\2"+
		"\2\u0182J\3\2\2\2\u0183\u0184\5M\'\2\u0184\u0186\5O(\2\u0185\u0187\5I"+
		"%\2\u0186\u0185\3\2\2\2\u0186\u0187\3\2\2\2\u0187L\3\2\2\2\u0188\u018a"+
		"\5%\23\2\u0189\u018b\7\60\2\2\u018a\u0189\3\2\2\2\u018a\u018b\3\2\2\2"+
		"\u018b\u0194\3\2\2\2\u018c\u018d\7\62\2\2\u018d\u018f\t\4\2\2\u018e\u0190"+
		"\5\'\24\2\u018f\u018e\3\2\2\2\u018f\u0190\3\2\2\2\u0190\u0191\3\2\2\2"+
		"\u0191\u0192\7\60\2\2\u0192\u0194\5\'\24\2\u0193\u0188\3\2\2\2\u0193\u018c"+
		"\3\2\2\2\u0194N\3\2\2\2\u0195\u0196\5Q)\2\u0196\u0197\5E#\2\u0197P\3\2"+
		"\2\2\u0198\u0199\t\f\2\2\u0199R\3\2\2\2\u019a\u019b\7v\2\2\u019b\u019c"+
		"\7t\2\2\u019c\u019d\7w\2\2\u019d\u01a4\7g\2\2\u019e\u019f\7h\2\2\u019f"+
		"\u01a0\7c\2\2\u01a0\u01a1\7n\2\2\u01a1\u01a2\7u\2\2\u01a2\u01a4\7g\2\2"+
		"\u01a3\u019a\3\2\2\2\u01a3\u019e\3\2\2\2\u01a4T\3\2\2\2\u01a5\u01a6\7"+
		"*\2\2\u01a6V\3\2\2\2\u01a7\u01a8\7+\2\2\u01a8X\3\2\2\2\u01a9\u01aa\7}"+
		"\2\2\u01aaZ\3\2\2\2\u01ab\u01ac\7\177\2\2\u01ac\\\3\2\2\2\u01ad\u01ae"+
		"\7]\2\2\u01ae^\3\2\2\2\u01af\u01b0\7_\2\2\u01b0`\3\2\2\2\u01b1\u01b2\7"+
		"=\2\2\u01b2b\3\2\2\2\u01b3\u01b4\7.\2\2\u01b4d\3\2\2\2\u01b5\u01b6\7\60"+
		"\2\2\u01b6f\3\2\2\2\u01b7\u01b8\7?\2\2\u01b8h\3\2\2\2\u01b9\u01ba\7@\2"+
		"\2\u01baj\3\2\2\2\u01bb\u01bc\7>\2\2\u01bcl\3\2\2\2\u01bd\u01be\7#\2\2"+
		"\u01ben\3\2\2\2\u01bf\u01c0\7\u0080\2\2\u01c0p\3\2\2\2\u01c1\u01c2\7A"+
		"\2\2\u01c2r\3\2\2\2\u01c3\u01c4\7<\2\2\u01c4t\3\2\2\2\u01c5\u01c6\7?\2"+
		"\2\u01c6\u01c7\7?\2\2\u01c7v\3\2\2\2\u01c8\u01c9\7>\2\2\u01c9\u01ca\7"+
		"?\2\2\u01cax\3\2\2\2\u01cb\u01cc\7@\2\2\u01cc\u01cd\7?\2\2\u01cdz\3\2"+
		"\2\2\u01ce\u01cf\7#\2\2\u01cf\u01d0\7?\2\2\u01d0|\3\2\2\2\u01d1\u01d2"+
		"\7(\2\2\u01d2\u01d3\7(\2\2\u01d3~\3\2\2\2\u01d4\u01d5\7~\2\2\u01d5\u01d6"+
		"\7~\2\2\u01d6\u0080\3\2\2\2\u01d7\u01d8\7-\2\2\u01d8\u01d9\7-\2\2\u01d9"+
		"\u0082\3\2\2\2\u01da\u01db\7/\2\2\u01db\u01dc\7/\2\2\u01dc\u0084\3\2\2"+
		"\2\u01dd\u01de\7-\2\2\u01de\u0086\3\2\2\2\u01df\u01e0\7/\2\2\u01e0\u0088"+
		"\3\2\2\2\u01e1\u01e2\7,\2\2\u01e2\u008a\3\2\2\2\u01e3\u01e4\7\61\2\2\u01e4"+
		"\u008c\3\2\2\2\u01e5\u01e6\7(\2\2\u01e6\u008e\3\2\2\2\u01e7\u01e8\7~\2"+
		"\2\u01e8\u0090\3\2\2\2\u01e9\u01ea\7`\2\2\u01ea\u0092\3\2\2\2\u01eb\u01ec"+
		"\7\'\2\2\u01ec\u0094\3\2\2\2\u01ed\u01ee\7-\2\2\u01ee\u01ef\7?\2\2\u01ef"+
		"\u0096\3\2\2\2\u01f0\u01f1\7/\2\2\u01f1\u01f2\7?\2\2\u01f2\u0098\3\2\2"+
		"\2\u01f3\u01f4\7,\2\2\u01f4\u01f5\7?\2\2\u01f5\u009a\3\2\2\2\u01f6\u01f7"+
		"\7\61\2\2\u01f7\u01f8\7?\2\2\u01f8\u009c\3\2\2\2\u01f9\u01fa\7(\2\2\u01fa"+
		"\u01fb\7?\2\2\u01fb\u009e\3\2\2\2\u01fc\u01fd\7~\2\2\u01fd\u01fe\7?\2"+
		"\2\u01fe\u00a0\3\2\2\2\u01ff\u0200\7`\2\2\u0200\u0201\7?\2\2\u0201\u00a2"+
		"\3\2\2\2\u0202\u0203\7\'\2\2\u0203\u0204\7?\2\2\u0204\u00a4\3\2\2\2\u0205"+
		"\u0206\7>\2\2\u0206\u0207\7>\2\2\u0207\u0208\7?\2\2\u0208\u00a6\3\2\2"+
		"\2\u0209\u020a\7@\2\2\u020a\u020b\7@\2\2\u020b\u020c\7?\2\2\u020c\u00a8"+
		"\3\2\2\2\u020d\u020e\7@\2\2\u020e\u020f\7@\2\2\u020f\u0210\7@\2\2\u0210"+
		"\u0211\7?\2\2\u0211\u00aa\3\2\2\2\u0212\u0216\5\u00adW\2\u0213\u0215\5"+
		"\u00afX\2\u0214\u0213\3\2\2\2\u0215\u0218\3\2\2\2\u0216\u0214\3\2\2\2"+
		"\u0216\u0217\3\2\2\2\u0217\u00ac\3\2\2\2\u0218\u0216\3\2\2\2\u0219\u021e"+
		"\t\r\2\2\u021a\u021e\n\16\2\2\u021b\u021c\t\17\2\2\u021c\u021e\t\20\2"+
		"\2\u021d\u0219\3\2\2\2\u021d\u021a\3\2\2\2\u021d\u021b\3\2\2\2\u021e\u00ae"+
		"\3\2\2\2\u021f\u0224\t\21\2\2\u0220\u0224\n\16\2\2\u0221\u0222\t\17\2"+
		"\2\u0222\u0224\t\20\2\2\u0223\u021f\3\2\2\2\u0223\u0220\3\2\2\2\u0223"+
		"\u0221\3\2\2\2\u0224\u00b0\3\2\2\2\u0225\u0226\7B\2\2\u0226\u00b2\3\2"+
		"\2\2\u0227\u0228\7\60\2\2\u0228\u0229\7\60\2\2\u0229\u022a\7\60\2\2\u022a"+
		"\u00b4\3\2\2\2\u022b\u022c\7r\2\2\u022c\u022d\7t\2\2\u022d\u022e\7k\2"+
		"\2\u022e\u022f\7p\2\2\u022f\u0230\7v\2\2\u0230\u00b6\3\2\2\2\u0231\u0233"+
		"\t\22\2\2\u0232\u0231\3\2\2\2\u0233\u0234\3\2\2\2\u0234\u0232\3\2\2\2"+
		"\u0234\u0235\3\2\2\2\u0235\u0236\3\2\2\2\u0236\u0237\b\\\2\2\u0237\u00b8"+
		"\3\2\2\2\u0238\u0239\7\61\2\2\u0239\u023a\7,\2\2\u023a\u023e\3\2\2\2\u023b"+
		"\u023d\13\2\2\2\u023c\u023b\3\2\2\2\u023d\u0240\3\2\2\2\u023e\u023f\3"+
		"\2\2\2\u023e\u023c\3\2\2\2\u023f\u0241\3\2\2\2\u0240\u023e\3\2\2\2\u0241"+
		"\u0242\7,\2\2\u0242\u0243\7\61\2\2\u0243\u0244\3\2\2\2\u0244\u0245\b]"+
		"\3\2\u0245\u00ba\3\2\2\2\u0246\u0247\7\61\2\2\u0247\u0248\7\61\2\2\u0248"+
		"\u024c\3\2\2\2\u0249\u024b\n\23\2\2\u024a\u0249\3\2\2\2\u024b\u024e\3"+
		"\2\2\2\u024c\u024a\3\2\2\2\u024c\u024d\3\2\2\2\u024d\u024f\3\2\2\2\u024e"+
		"\u024c\3\2\2\2\u024f\u0250\b^\3\2\u0250\u00bc\3\2\2\2.\2\u00dd\u00e1\u00e5"+
		"\u00e9\u00ed\u00f4\u00f9\u00fb\u0101\u0105\u0109\u010f\u0114\u011e\u0122"+
		"\u0128\u012c\u0134\u0138\u013e\u0148\u014c\u0152\u0156\u015b\u015e\u0161"+
		"\u0166\u0169\u016e\u0173\u017b\u0186\u018a\u018f\u0193\u01a3\u0216\u021d"+
		"\u0223\u0234\u023e\u024c\4\b\2\2\2\3\2";
	public static final ATN _ATN =
		new ATNDeserializer().deserialize(_serializedATN.toCharArray());
	static {
		_decisionToDFA = new DFA[_ATN.getNumberOfDecisions()];
		for (int i = 0; i < _ATN.getNumberOfDecisions(); i++) {
			_decisionToDFA[i] = new DFA(_ATN.getDecisionState(i), i);
		}
	}
}